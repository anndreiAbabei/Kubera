<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net5.0</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
    <NoWarn>1219, TS1219</NoWarn>

    <!-- Set this to true if you enable server-side prerendering -->
    <BuildServerSideRenderer>false</BuildServerSideRenderer>
    <UserSecretsId>e0531f04-e6d0-45c7-8e12-19464b134793</UserSecretsId>
    <Copyright>Andrei Ababei</Copyright>
    <PackageProjectUrl>https://github.com/anndreiAbabei/Kubera</PackageProjectUrl>
    <Title>Loot App</Title>
    <Authors>Ababei Andrei</Authors>
    <PackageLicenseUrl>https://raw.githubusercontent.com/anndreiAbabei/Kubera/master/LICENSE</PackageLicenseUrl>
    <RepositoryUrl>https://github.com/anndreiAbabei/Kubera</RepositoryUrl>
    <Company>Andrei Ababei</Company>
    <AssemblyVersion>1.0.0</AssemblyVersion>
    <FileVersion>1.0.0</FileVersion>
    <Configurations>Debug;UAT;Production</Configurations>
    <Platforms>AnyCPU</Platforms>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Production' ">
    <Optimize Condition=" '$(Optimize)' == '' ">true</Optimize>
  </PropertyGroup>
  
  <PropertyGroup>
    <AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>
    <GenerateBindingRedirectsOutputType>true</GenerateBindingRedirectsOutputType>
  </PropertyGroup>
  
  <ItemGroup>
    <PackageReference Include="AutoMapper" Version="10.1.1" />
    <PackageReference Include="AutoMapper.Extensions.Microsoft.DependencyInjection" Version="8.1.1" />
    <PackageReference Include="Azure.Extensions.AspNetCore.Configuration.Secrets" Version="1.0.2" />
    <PackageReference Include="Azure.Identity" Version="1.3.0" />
    <PackageReference Include="ConfigurationSubstitutor" Version="1.1.1" />
    <PackageReference Include="CSharpFunctionalExtensions" Version="2.14.5" />
    <PackageReference Include="FluentValidation.AspNetCore" Version="9.5.1" />
    <PackageReference Include="MediatR" Version="9.0.0" />
    <PackageReference Include="MediatR.Extensions.Microsoft.DependencyInjection" Version="9.0.0" />
    <PackageReference Include="Microsoft.AspNetCore.Mvc.Versioning" Version="5.0.0" />
    <PackageReference Include="Microsoft.AspNetCore.Mvc.Versioning.ApiExplorer" Version="5.0.0" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="5.0.3" />
    <PackageReference Include="Microsoft.AspNetCore.ApiAuthorization.IdentityServer" Version="5.0.3" />
    <PackageReference Include="Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore" Version="5.0.3" />
    <PackageReference Include="Microsoft.AspNetCore.Identity.EntityFrameworkCore" Version="5.0.3" />
    <PackageReference Include="Microsoft.AspNetCore.Identity.UI" Version="5.0.3" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Relational" Version="5.0.3" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Sqlite" Version="5.0.3" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="5.0.3" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="5.0.3">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="5.0.1" />
    <PackageReference Include="Microsoft.TypeScript.MSBuild" Version="4.2.2">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="5.0.2" />
    <PackageReference Include="Newtonsoft.Json" Version="12.0.3" />
    <PackageReference Include="NSwag.AspNetCore" Version="13.10.7" />
    <PackageReference Include="NSwag.MSBuild" Version="13.10.7">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="ZymLabs.NSwag.FluentValidation" Version="0.4.0" />
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content Remove="$(SpaRoot)**" />
    <Content Remove="ClientApp\src\app\NewFolder\**" />
    <None Remove="$(SpaRoot)**" />
    <None Remove="ClientApp\src\app\NewFolder\**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>

  <ItemGroup>
    <Compile Remove="ClientApp\src\app\NewFolder\**" />
    <EmbeddedResource Remove="ClientApp\src\app\NewFolder\**" />
    <TypeScriptCompile Remove="ClientApp\src\app\NewFolder\**" />
  </ItemGroup>

  <ItemGroup>
    <None Remove="ClientApp\src\models\endpoints.model.ts" />
    <None Remove="ClientApp\src\models\filtering.model.ts" />
    <None Remove="ClientApp\src\models\transactions-response.model.ts" />
    <None Remove="ClientApp\src\models\transactions.model.ts" />
  </ItemGroup>

  <ItemGroup>
    <TypeScriptCompile Remove="ClientApp\src\services\http-utils.service.ts" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Kubera.Application\Kubera.Application.csproj" />
    <ProjectReference Include="..\Kubera.Business\Kubera.Business.csproj" />
    <ProjectReference Include="..\Kubera.Data\Kubera.Data.csproj" />
    <ProjectReference Include="..\Kubera.General\Kubera.General.csproj" />
  </ItemGroup>

  <ItemGroup>
    <Folder Include="ClientApp\src\app\shared\" />
  </ItemGroup>

  <ItemGroup>
    <None Update="ClientApp\src\models\filtering - Copy.model.js">
      <DependentUpon>filtering.model.js</DependentUpon>
    </None>
    <None Update="ClientApp\src\models\filtering - Copy.model.js.map">
      <DependentUpon>filtering.model.js.map</DependentUpon>
    </None>
  </ItemGroup>

  <ItemGroup>
    <TypeScriptCompile Update="ClientApp\src\models\endpoints.model.ts">
      <SubType>Code</SubType>
    </TypeScriptCompile>
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --prod" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:ssr -- --prod" Condition=" '$(BuildServerSideRenderer)' == 'true' " />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
      <DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

</Project>
